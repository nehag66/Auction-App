{"ast":null,"code":"import _classCallCheck from \"/home/pristyncare/Documents/auctionApp/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pristyncare/Documents/auctionApp/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport var HttpServiceService = /*#__PURE__*/(function () {\n  var HttpServiceService = /*#__PURE__*/function () {\n    function HttpServiceService(http, router) {\n      _classCallCheck(this, HttpServiceService);\n\n      this.http = http;\n      this.router = router;\n      this.beforeLoginheader = {\n        Authorization: \"Basic \" + btoa(\"android-client:android-secret\"),\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      };\n    }\n\n    _createClass(HttpServiceService, [{\n      key: \"getData\",\n      value: function getData(url) {\n        var _this = this;\n\n        return new Promise(function (resolve, reject) {\n          var headers = new HttpHeaders({\n            'Authorization': localStorage.getItem(\"token_type\") + ' ' + localStorage.getItem(\"refresh_token\")\n          });\n          /*  const options = {\n             headers: headers,\n             params: params\n          }; */\n\n          _this.http.get(url).subscribe(function (res) {\n            return resolve(res);\n          });\n        });\n      }\n    }, {\n      key: \"postData\",\n      value: function postData(url, data) {\n        var _this2 = this;\n\n        if (localStorage.getItem(\"access_token\")) {\n          this.header = {\n            Authorization: localStorage.getItem(\"token_type\") + \" \" + localStorage.getItem(\"access_token\"),\n            \"Content-Type\": \"application/json;\"\n          };\n        } else {\n          if (url.match(/token/gi)) {\n            this.header = this.beforeLoginheader;\n          } else {\n            this.header = {\n              Authorization: \"bearer\" + \" \" + data[\"accessToken\"],\n              \"Content-Type\": \"application/json;\"\n            };\n          }\n        }\n\n        return new Promise(function (resolve, reject) {\n          var httpOptions = {\n            headers: new HttpHeaders(_this2.header)\n          };\n\n          _this2.http.post(url, data, httpOptions).subscribe(function (res) {\n            resolve(res);\n          }, function (err) {\n            if (err[\"status\"] == 401) {\n              var errPromise = new Promise(function (resolve, reject) {\n                var httpOptions = {\n                  headers: new HttpHeaders(_this2.beforeLoginheader)\n                };\n\n                _this2.http.post(environment[\"stagingUrl\"] + \"oauth/token\", \"grant_type=refresh_token&refresh_token=\" + localStorage.getItem(\"refresh_token\"), httpOptions);\n              });\n              resolve(errPromise);\n            } else {\n              reject(err);\n            }\n          });\n        });\n      }\n    }]);\n\n    return HttpServiceService;\n  }();\n\n  HttpServiceService.ɵfac = function HttpServiceService_Factory(t) {\n    return new (t || HttpServiceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  HttpServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HttpServiceService,\n    factory: HttpServiceService.ɵfac,\n    providedIn: 'root'\n  });\n  return HttpServiceService;\n})();","map":null,"metadata":{},"sourceType":"module"}